name: Deploy no Google Cloud Run

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Trilha-Esporte
    env:
      IMAGE_NAME: "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/streamlit-repo/streamlit-app:${{ github.sha }}"

    steps:
      # ðŸ”¹ Checkout do repositÃ³rio
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      # ðŸ”¹ Autenticar no Google Cloud
      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ðŸ”¹ Configurar autenticaÃ§Ã£o do Docker para o Artifact Registry
      - name: Configurar autenticaÃ§Ã£o do Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      # ðŸ”¹ Construir e enviar imagem Docker
      - name: Construir e enviar imagem Docker
        run: |
          echo "Construindo a imagem Docker..."
          docker build -t ${IMAGE_NAME} .

          echo "Enviando a imagem para o Google Artifact Registry..."
          docker push ${IMAGE_NAME}

      # ðŸ”¹ Fazer o deploy no Cloud Run
      - name: Deploy no Cloud Run
        run: |
          echo "Realizando deploy no Cloud Run..."
          gcloud run deploy streamlit-app \
            --image=${IMAGE_NAME} \
            --region=us-central1 \
            --platform=managed \
            --port=8501 \
            --allow-unauthenticated \
             --timeout=2000s \
            --set-env-vars "DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_NAME=${{ secrets.DB_NAME }}",STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

      # ðŸ”¹ Mostrar a URL do serviÃ§o
      - name: Exibir URL do serviÃ§o
        run: |
          echo "Obtendo a URL do serviÃ§o..."
          gcloud run services describe streamlit-app --region=us-central1 --format 'value(status.url)'
